pipeline {
    agent any

    tools {
        jdk 'JDK17' // Make sure you've added this in Jenkins > Global Tool Configuration
    }

    environment {
        DOCKER_IMAGE = "premgowda07/springbootapp" // Replace with your image name
        DOCKER_TAG = "v1"
        REGISTRY_CREDENTIALS = 'dockerhub' // ID of your Docker Hub credentials in Jenkins
        SONAR_TOKEN = credentials('sonarqube-token') // ID of your SonarQube token credentials in Jenkins
    }

    stages {
        stage('Checkout') {
            steps {
                git 'https://github.com/YourRepo/spring-boot-demo.git' // Replace with your repo URL
            }
        }

        stage('Build and Test') {
            steps {
                sh './mvnw clean install'
            }
        }

        stage('SonarQube Analysis') {
            steps {
                withSonarQubeEnv('SonarQube') { // Make sure SonarQube is configured in Jenkins
                    sh './mvnw sonar:sonar -Dsonar.login=$SONAR_TOKEN'
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    sh """
                    docker build -t $DOCKER_IMAGE:$DOCKER_TAG .
                    """
                }
            }
        }

        stage('Push Docker Image') {
            steps {
                script {
                    docker.withRegistry('', REGISTRY_CREDENTIALS) {
                        sh "docker push $DOCKER_IMAGE:$DOCKER_TAG"
                    }
                }
            }
        }

        stage('Update Deployment File') {
            steps {
                script {
                    sh """
                    sed -i 's|premgowda07/springbootapp:.*|$DOCKER_IMAGE:$DOCKER_TAG|g' deployment.yaml
                    """
                }
            }
        }
    }
}
